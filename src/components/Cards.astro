---
const { data } = Astro.props;
---

<ul class="cards">
  {
    data?.map((item) => {
      const external = /https/.test(item.frontmatter.link);
      const github = /github/.test(item.frontmatter.link);

      return (
        <li class="card-item">
          <a
            href={item.frontmatter.link ?? item.url}
            {...(external ? { target: `_blank`, rel: `noreferrer` } : {})}
          >
            <article>
              {item.frontmatter.image && (
                <div class="card-figure">
                  <div class="card-figure_header">
                    <span class="button">
                      <span />
                      <span />
                      <span />
                    </span>
                  </div>
                  <div class="card-figure_holder">
                    <img src={item.frontmatter.image} />
                  </div>
                </div>
              )}
              <div class="card-content">
                <h1 class={`text-medium`}>
                  {item.frontmatter.title}{" "}
                  {item.frontmatter.tag && <span>{item.frontmatter.tag}</span>}
                </h1>
                <p class="color-1">{item.frontmatter.tagline}</p>

                <p class="text-highlight text-small">
                  <span>{github || external ? "Access" : "Read more"}</span>

                  <svg
                    width="15"
                    height="15"
                    viewBox="0 0 15 15"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z"
                      fill="currentColor"
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                    />
                  </svg>
                </p>
              </div>
            </article>
          </a>
        </li>
      );
    })
  }

  <div class="card-item__hover"></div>
</ul>

<style lang="scss">
  .cards {
    --gap: calc(var(--unit) * 2);

    display: grid;
    gap: var(--gap);
    position: relative;

    @media screen and (min-width: 600px) {
      grid-template-columns: repeat(2, 1fr);
    }

    & .text-medium {
      line-height: 1.45;
    }
  }

  .card-item {
    border-radius: var(--radius);
    overflow: hidden;
    transition: all var(--transition);

    box-shadow: var(--shadow);

    &:active {
      background: var(--color-4);
    }

    * {
      display: block;
      transition: color var(--transition);
    }

    &:hover {
      background: var(--color-4);

      .color-1 {
        color: var(--color-0);
      }

      .text-highlight {
        opacity: 0.7;
      }
    }
  }

  .card-content {
    padding: calc(var(--unit) * 1) calc(var(--unit) * 1.3);
    text-wrap: balance;

    display: flex;
    flex-direction: column;
    gap: calc(var(--unit) * 0.5);
    line-height: 1.45;
  }

  .card-figure {
    --padding: calc(var(--unit) * 0.7);
    --card-radius: calc(var(--radius) - var(--padding) * 0.3);
    --shadow: hsla(var(--hue), var(--saturation), 91%, 0.7) 0px 1px 5px -4px,
      hsla(255, 75%, 16%, 0.1) 0px 4px 8px 0px;

    width: calc(100% - var(--padding) * 2);
    margin: var(--padding);
    box-shadow: var(--shadow);
    border-radius: var(--card-radius);
    position: relative;

    &:after {
      content: "";
      display: block;
      position: absolute;
      inset: 0;
      border: 1px solid hsla(255, 75%, 16%, 0.1);
      z-index: 99;
      border-radius: var(--card-radius);
    }
  }

  .card-figure_header {
    background: hsla(var(--hue), var(--saturation), 10%, 0.04);
    height: var(--padding);
    width: 100%;
    position: relative;

    border-top-left-radius: var(--card-radius);
    border-top-right-radius: var(--card-radius);

    .button {
      display: flex;
      gap: 3px;
      align-items: center;
      position: absolute;
      left: 6px;
      top: 3px;
      bottom: 2px;

      span {
        width: 3px;
        height: 3px;
        display: block;
        background: hsla(var(--hue), var(--saturation), 10%, 0.2);
        border-radius: 9999px;
      }
    }

    &:after {
      content: "";
      display: block;
      position: absolute;
      border-radius: 999px;
      background: hsla(var(--hue), var(--saturation), 10%, 0.06);

      top: 3px;
      bottom: 3px;
      left: 28px;
      right: 3px;
    }
  }

  .card-figure_holder {
    aspect-ratio: 1.6;

    position: relative;
    overflow: hidden;
    border-bottom-left-radius: var(--card-radius);
    border-bottom-right-radius: var(--card-radius);

    img {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
    }
  }
</style>
