---
const items = ["Writing", "UI Garden", "Projects"];
---

<div class="nav">
  <h2 class="text-large">
    <div class="track">
      <div class="runner">
        {
          items.map((item, index) => {
            return (
              <div class="item" style={{ "--index": index }}>
                <span class={`icon ${item.toLowerCase()}`} />
                {item.split("").map((e, li) => (
                  <span class="item-letter" style={{ "--letter-index": li }}>
                    {e}
                  </span>
                ))}
              </div>
            );
          })
        }
      </div>
    </div>
  </h2>
</div>

<style lang="scss">
  :root {
    --total: 3;

    timeline-scope: --main;
  }

  body {
    animation: indicate both steps(var(--total));
    animation-timeline: --main;
    animation-range: entry 50% exit 0%;
    counter-set: section var(--section);
    view-timeline: --main;
  }

  @property --section {
    inherits: true;
    syntax: "<integer>";
    initial-value: 0;
  }

  @keyframes indicate {
    to {
      --section: var(--total);
    }
  }

  .nav {
    grid-column: 1/2;
    grid-row: 2 / 10;
    margin-top: calc(var(--unit) * -0.5);

    display: none;

    @media screen and (min-width: 768px) {
      display: block;
    }
  }

  .text-large {
    position: sticky !important;
    top: calc(var(--unit) * 2);
    margin-bottom: calc(var(--unit) * 2);
  }

  .item {
    --opacity: min(
      calc((var(--index) + 1 - var(--section))),
      calc(((var(--index) * -1) + var(--section) + 1))
    );

    display: flex;
    transition: all 400ms;
  }

  .item-letter {
    transition-timing-function: var(--spring-easing-bounce);

    opacity: var(--opacity);
    transform: translateY(
      calc((var(--letter-index)) * (var(--index) - var(--section)) * 2px)
    );

    display: inline-block;
    min-width: 10px;

    @for $i from 2 through 10 {
      &:nth-child(#{$i}) {
        transition: transform #{400 + $i * 20}ms, opacity 200ms;
      }
    }
  }

  .track {
    height: 1.3em;
  }

  .runner {
    translate: 0 calc(var(--section) * -100% / var(--total));

    transition-timing-function: var(--spring-easing-bounce);
    transition-duration: 300ms;
  }

  .icon {
    display: block;
    width: calc(var(--unit) * 1.5);
    height: 1.3em;
    margin-right: calc(var(--unit) * 0.5);

    background-repeat: no-repeat;
    background-size: auto 64%;
    background-position: center 5px;

    transition: opacity 300ms;
    opacity: var(--opacity);

    &.writing {
      background-image: url("/assets/paragraph.png");
    }

    &.experiments {
      background-image: url("/assets/diferent.png");
    }

    &.projects {
      background-image: url("/assets/section.png");
    }

    &.garden {
      background-image: url("/assets/garden.png");
    }
  }
</style>
