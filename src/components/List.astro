---
const { data } = Astro.props;

const formatDate = (string) => {
  const date = new Date(string);

  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
  });
};
---

<ul class={`list list__horizontal`}>
  {
    data?.map((item) => {
      return (
        <li class="list-item">
          <a href={item.frontmatter.link ?? item.url}>
            <article class="list-article">
              <h1 class="text-medium">{item.frontmatter.title}</h1>
              <p class="color-1">{item.frontmatter.tagline}</p>
              <p class="color-2 text-small">
                {formatDate(item.frontmatter.date)}
              </p>
            </article>
          </a>
        </li>
      );
    })
  }
</ul>

<style lang="scss">
  /**
   * List
   */
  .list {
    a {
      display: block;
      transition: color var(--transition);

      * {
        transition: color var(--transition);
      }

      &:hover * {
        color: var(--color-0);
      }
    }
  }

  .list-item:not(:last-child) .list-article {
    padding-bottom: calc(var(--unit) * 2);
  }

  .list-article {
    display: flex;
    flex-direction: column;
    gap: calc(var(--unit) * 0.25);
  }

  .text-medium {
    line-height: 1.45;
  }

  /**
   * Hover
   */
  @media screen and (min-width: 1000px) {
    .list-item {
      &:hover ~ &:last-child:before,
      &:hover:last-child:before {
        opacity: 1;

        transform: scale(1);
        filter: blur(0px);
      }

      &:last-child:before {
        content: "";
        display: block;

        position: absolute;
        z-index: -1;

        background: var(--color-4);
        opacity: 0;
        border-radius: var(--radius);

        transform: scale(1.04);
        filter: blur(10px);

        pointer-events: none;
        transition: all 0.5s cubic-bezier(0.2, 1, 0.2, 1);
        border: 1px solid var(--color-3);
      }
    }

    .list__horizontal {
      --height: calc(var(--unit) * 8.8);
      --y: 0;

      .list-item {
        &:last-child:before {
          left: calc(var(--unit) * -1);
          right: calc(var(--unit) * -1);
          top: var(--y);

          margin: calc(var(--unit) * -1) 0;
          height: var(--height);
        }

        @for $i from 2 through 6 {
          &:nth-child(#{$i}):hover ~ .list-item:last-child:before {
            // times of card's height + times of card's padding - padding;
            --y: calc(
              (var(--height) * (#{$i} - 1)) +
                (var(--unit) * 2 * (#{$i} - 1)) -
                (var(--unit) * 2 * (#{$i} - 1))
            );
          }
        }

        &:last-child:hover:before {
          top: calc(100% - var(--height) + var(--unit) * 2);
        }
      }
    }
  }
</style>
