---
import Hero from "../components/Hero.astro";
import Headroom from "../components/Headroom.astro";
import Section from "../components/Section.astro";
import About from "../components/About.astro";
import Footer from "../components/Footer.astro";
import MainHead from "../components/MainHead.astro";

const blogsMd = await Astro.glob("./blog/*.md");
const allData = blogsMd.sort((a, b) => {
  const dateA = new Date(a?.frontmatter.date ?? "").getTime();
  const dateB = new Date(b?.frontmatter.date ?? "").getTime();

  return dateB - dateA;
});

const contentMd = await Astro.glob("../content/*.md");
const projects = contentMd.sort((a, b) => {
  if (a.order < b.order) {
    return -1;
  }
  if (a.order > b.order) {
    return 1;
  }
  return 0;
});

const articles = allData.filter(
  ({ frontmatter }) => frontmatter.type === "article"
);
const experiments = allData.filter(
  ({ frontmatter }) => frontmatter.type === "experiments"
);
---

<html lang="en">
  <head>
    <MainHead />
  </head>

  <body>
    <input class="debug" type="checkbox" id="debug" />
    <label for="debug" class="type_footnote">Debug</label>

    <main class="container grid">
      <Hero />

      <Section title="Writing" data={articles} />
      <Section title="Experiments" data={experiments} vertical />
      <Section title="Projects" data={projects} />

      <About />

      <Footer />
    </main>
    <style lang="scss">
      @media screen and (min-width: 800px) {
        body:before {
          content: "";
          position: absolute;
          left: 0;
          top: 0;
          right: 0;
          z-indez: -1;
          height: 1000px;
          filter: contrast(220%) brightness(2300%) grayscale(1);
          opacity: 0.3;
          background: linear-gradient(
              180deg,
              rgba(0, 0, 255, 0.4) 0%,
              rgba(0, 0, 255, 0.2) 100%
            ),
            url("data:image/svg+xml,%3Csvg viewBox='0 0 2000 2000' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
        }

        body:after {
          content: "";
          position: absolute;
          left: 0;
          top: 0;
          right: 0;
          z-indez: -1;
          height: 1000px;
          background: linear-gradient(
              180deg,
              rgba(255, 255, 255, 0) 25%,
              rgba(255, 255, 255, 1) 100%
            ),
            radial-gradient(
              circle at 40% 50%,
              rgba(255, 255, 255, 0.7) 20%,
              rgba(255, 255, 255, 0)
            ),
            radial-gradient(
              circle at 40% 50%,
              rgba(0, 0, 0, 0) 50%,
              rgba(0, 0, 0, 0.2)
            );
        }
      }

      .grid {
        position: relative;
        z-index: 1;
        padding-top: calc(var(--unit) * 1);
        padding-bottom: calc(var(--unit) * 1);
      }

      @media screen and (min-width: 800px) {
        .grid {
          padding-top: calc(var(--unit) * 8);
        }
      }

      .debug {
        position: fixed;
        top: 1em;
        right: 1em;
        opacity: 0;
        z-index: 9;

        transition: all var(--transition);
        cursor: pointer;

        display: none;
        @media screen and (min-width: 800px) {
          display: block;
        }

        &:hover {
          opacity: 1;

          + label {
            opacity: 1;
            top: 3.6em;
          }
        }

        + label {
          transition: all var(--transition);
          cursor: pointer;

          position: fixed;
          top: 2em;
          right: 0em;
          transform: rotate(90deg);
          opacity: 0.7;

          display: none;
          @media screen and (min-width: 800px) {
            display: block;
          }
        }
      }

      .debug:checked {
        ~ .container {
          background: #c9debb !important;
          position: relative;

          :global(.grid) {
            position: relative;
          }

          &.grid:before,
          &.grid:after {
            content: "";
            display: block;
            background: #9593dd;
            width: var(--unit);
            position: absolute;
            margin: 0;
            top: calc(var(--unit) * 8);
            bottom: calc(var(--unit) * 1);
            outline: 1px dashed #7528ca;
            z-index: 999;

            background: repeating-linear-gradient(
                45deg,
                #8762d4 0px,
                #8762d4 1px,
                transparent 1px,
                transparent 9px
              )
              #9693de !important;
          }

          &.grid:before {
            left: calc(100% / 2.97 - var(--unit) / 2) !important;
          }

          &.grid:after {
            left: calc((100% / 3) * 2 - var(--unit) / 2) !important;
          }

          :global(.footer),
          :global(.hero),
          :global(.section) {
            outline: 1px dashed #7528ca;
            background: #a8c4e4 !important;
            position: relative;
          }

          :global(.section:after) {
            content: "";
            display: block;
            background: #9593dd;
            height: var(--unit);
            bottom: calc(var(--unit) * -1);
            position: absolute;
            left: 0;
            right: 0;
            outline: 1px dashed #7528ca;
            z-index: 999;

            background: repeating-linear-gradient(
                45deg,
                #8762d4 0px,
                #8762d4 1px,
                transparent 1px,
                transparent 9px
              )
              #9693de !important;
          }
        }
      }
    </style>
  </body>
</html>
