---
import Hero from "../components/Hero.astro";
import Headroom from "../components/Headroom.astro";
import Section from "../components/Section.astro";
import About from "../components/About.astro";
import Footer from "../components/Footer.astro";
import MainHead from "../components/MainHead.astro";

const blogsMd = await Astro.glob("./blog/*.md")
const allData = blogsMd.sort((a, b) => {
  const dateA = new Date(a?.date ?? "").getTime();
  const dateB = new Date(b?.date ?? "").getTime();

  return dateB - dateA;
});

const contentMd = await Astro.glob("../content/*.md")
const projects = contentMd.sort((a, b) => {
  if (a.order < b.order) {
    return -1;
  }
  if (a.order > b.order) {
    return 1;
  }
  return 0;
});

const articles = allData.filter(({ frontmatter }) => frontmatter.type === "article");
const experiments = allData.filter(({ frontmatter }) => frontmatter.type === "experiments");

---

<html lang="en">
  <head>
    <MainHead />
  </head>

  <body>
    <input class="debug " type="checkbox" id="debug" />
    <label for="debug" class="type_footnote">Debug</label>

    <main class="container grid">
      <Hero />
      <Headroom />

      <Section title="Writing" data={articles} />
      <Section title="Experiments" data={experiments} vertical />
      <Section title="Projects" data={projects} />

      <About />

      <Footer />
    </main>
  </body>
</html>

<style lang="scss">
  .grid {
    padding-top: calc(var(--unit) * 1);
    padding-bottom: calc(var(--unit) * 1);
  }

  @media screen and (min-width: 800px) {
    .grid {
      padding-top: calc(var(--unit) * 8);
    }
  }

  .debug {
    position: fixed;
    top: 1em;
    right: 1em;
    opacity: 0;

    transition: all var(--transition);
    cursor: pointer;

    display: none;
    @media screen and (min-width: 800px) {
      display: block;
    }

    &:hover {
      opacity: 1;

      + label {
        opacity: 1;
        top: 3.6em;
      }
    }

    + label {
      transition: all var(--transition);
      cursor: pointer;

      position: fixed;
      top: 2em;
      right: 0em;
      transform: rotate(90deg);
      opacity: 0.7;

      display: none;
      @media screen and (min-width: 800px) {
        display: block;
      }
    }
  }

  .debug:checked {
    ~ .container {
      background: #c9debb !important;
      position: relative;

      :global(.grid) {
        position: relative;
      }

      &.grid:before,
      &.grid:after {
        content: "";
        display: block;
        background: #9593dd;
        width: var(--unit);
        position: absolute;
        margin: 0;
        top: calc(var(--unit) * 8);
        bottom: calc(var(--unit) * 1);
        outline: 1px dashed #7528ca;
        z-index: 999;

        background: repeating-linear-gradient(
            45deg,
            #8762d4 0px,
            #8762d4 1px,
            transparent 1px,
            transparent 9px
          )
          #9693de !important;
      }

      &.grid:before {
        left: calc(100% / 2.97 - var(--unit) / 2) !important;
      }

      &.grid:after {
        left: calc((100% / 3) * 2 - var(--unit) / 2) !important;
      }

      :global(.footer),
      :global(.hero),
      :global(.section) {
        outline: 1px dashed #7528ca;
        background: #a8c4e4 !important;
        position: relative;
      }

      :global(.section:after) {
        content: "";
        display: block;
        background: #9593dd;
        height: var(--unit);
        bottom: calc(var(--unit) * -1);
        position: absolute;
        left: 0;
        right: 0;
        outline: 1px dashed #7528ca;
        z-index: 999;

        background: repeating-linear-gradient(
            45deg,
            #8762d4 0px,
            #8762d4 1px,
            transparent 1px,
            transparent 9px
          )
          #9693de !important;
      }
    }
  }
</style>
