---
import MainHead from "../components/MainHead.astro";
import Footer from "../components/Footer.astro";

const {
  content: { title, date, tagline, timeToRead, cover, type },
} = Astro.props;

const formatDate = (string) => {
  const date = new Date(string);

  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
  });
};
---

<html lang="en">
  <head>
    <MainHead {title} description={tagline} image={false} />
  </head>

  <body>
    <div class="overflow">
      <article class="container-post">
        <a href="/" class="text-medium backlink"
          ><span>&#8592;</span> Homepage</a
        >
        <header class={`header`}>
          <div>
            <p>
              Danilo Woznica,
              {formatDate(date)}
              <span class="color-2">â€”</span>
              {timeToRead}
            </p>
            <h1 class={`text-large ${type}`}>{title}</h1>
          </div>
        </header>

        <div class="text-content color-1 content">
          <slot />
        </div>

        <Footer />
      </article>
    </div>
    <style lang="scss" is:global>
      .overflow {
        width: 100vw;
        overflow-x: hidden;
      }

      .container-post {
        max-width: calc(var(--unit) * 41);

        padding-left: var(--unit);
        padding-right: var(--unit);

        padding-top: calc(var(--unit) * 1);
        padding-bottom: calc(var(--unit) * 1);

        margin-left: auto;
        margin-right: auto;

        @media screen and (min-width: 800px) {
          padding-top: calc(var(--unit) * 8);
        }
      }

      .backlink span {
        display: inline-block;
        transition: transform var(--transition);
      }

      .backlink:hover span {
        transform: translateX(calc(var(--unit) * -0.2));
      }

      @media screen and (min-width: 800px) {
        .backlink {
          margin-left: calc(var(--unit) * -1);
        }
      }

      .header {
        display: flex;
        align-items: center;
        position: relative;

        @supports not (aspect-ratio: 1.6) {
          height: 390px;
        }

        @supports (aspect-ratio: 1.6) {
          aspect-ratio: 1.6;
          height: auto;
        }

        > div {
          margin-top: calc(var(--unit) * 2);
          margin-bottom: calc(var(--unit) * 4);
        }

        .text-large {
          margin-top: var(--unit);

          &:before {
            content: "";
            position: absolute;

            background-image: url("/assets/paragraph.png");
            background-repeat: no-repeat;
            background-size: auto 100%;
            background-position: center;

            top: calc(var(--unit) * 0.25);
            left: calc(var(--unit) * -3);
            width: calc(var(--unit) * 2);
            height: calc(var(--unit) * 2);
          }

          &.experiments:before {
            background-image: url("/assets/diferent.png");
          }
        }
      }

      .content {
        h2,
        h3,
        h4,
        h5 {
          font-size: var(--text-size-base);
          font-weight: 500;
          color: var(--color-0);
          margin-top: calc(var(--unit) * 2);
        }

        ol,
        ul {
          padding-left: calc(var(--unit) * 2);
          margin-bottom: var(--unit);
        }

        ol {
          list-style: decimal;
        }

        li {
          list-style: disc;
        }

        ol li {
          list-style: decimal;
        }

        video,
        img {
          max-width: 100%;
          height: auto;
        }

        a {
          color: var(--color-brand);
        }

        table td {
          border-bottom: 1px solid var(--color-3);
          padding: calc(var(--unit) * 0.4);
        }

        table th {
          text-align: left;
          padding: calc(var(--unit) * 0.4);
        }

        table code {
          background: var(--color-3);
          color: var(--color-1);
          padding: calc(var(--unit) * 0.2);
          white-space: nowrap;
        }

        figure img {
          border: 1px solid var(--color-3);
        }

        @media screen and (min-width: 800px) {
          figure.large img {
            margin: 0 -10vw;
            max-width: none;
            width: calc(100% + 20vw);
          }
        }

        figcaption {
          text-align: center;
          margin-bottom: var(--unit);
        }

        .footnotes p {
          margin-bottom: 0;
        }

        blockquote {
          font-size: var(--text-size-large);
          line-height: 1.4;
          font-family: var(--serif);
          margin: 1em 2em 1em 2em;

          span {
            color: var(--color-2);
            display: block;
            font-size: var(--text-size-large);
            margin-top: var(--unit);
          }

          @media screen and (min-width: 800px) {
            margin: 1em -4em 1em 3em;
          }
        }

        --color-text: var(--color-0);
        --color-background: #ffffff;
        --token-constant: var(--color-brand);
        --token-string: var(--color-0);
        --token-comment: #6a737d;
        --token-keyword: var(--color-brand);
        --token-parameter: var(--color-brand);
        --token-function: var(--color-brand);
        --token-string-expression: #a3be8c;
        --token-punctuation: var(--color-2);
        --token-link: #22863a;

        pre {
          padding: var(--unit);
          border: 1px solid var(--color-3);
          border-radius: var(--radius);
          margin-bottom: var(--unit);
          font-size: 14px;
          line-height: 1.4;
          overflow: auto;

          background: var(--color-background);
          color: var(--color-text);

          .constant {
            color: var(--token-constant);
          }
          .string {
            color: var(--token-string);
          }
          .comment {
            color: var(--token-comment);
          }
          .keyword {
            color: var(--token-keyword);
          }
          .parameter {
            color: var(--token-parameter);
          }
          .function {
            color: var(--token-function);
          }
          .string-expression {
            color: var(--token-string-expression);
          }
          .punctuation {
            color: var(--token-punctuation);
          }
          .link {
            color: var(--token-link);
          }
        }
      }
    </style>
  </body>
</html>
